/*
Deployment script for DB_A5A8F4_Hotels

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DB_A5A8F4_Hotels"
:setvar DefaultFilePrefix "DB_A5A8F4_Hotels"
:setvar DefaultDataPath "H:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\Data\"
:setvar DefaultLogPath "H:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\Data\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[PersonsInfo]...';


GO
ALTER TABLE [dbo].[PersonsInfo] ALTER COLUMN [Country] NVARCHAR (30) NOT NULL;


GO
PRINT N'Creating [dbo].[Descriptionn]...';


GO
CREATE TABLE [dbo].[Descriptionn] (
    [ID]      INT             IDENTITY (1, 1) NOT NULL,
    [Short]   NVARCHAR (600)  NOT NULL,
    [Long]    NVARCHAR (1500) NOT NULL,
    [Hotelid] INT             NOT NULL,
    CONSTRAINT [Pr_Key_DESC] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Pictures]...';


GO
CREATE TABLE [dbo].[Pictures] (
    [Id]      INT            IDENTITY (1, 1) NOT NULL,
    [Source]  NVARCHAR (150) NOT NULL,
    [Hotelid] INT            NOT NULL,
    CONSTRAINT [PicturesTableID] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Ref_DESCRIPTION_HOTEL]...';


GO
ALTER TABLE [dbo].[Descriptionn] WITH NOCHECK
    ADD CONSTRAINT [Ref_DESCRIPTION_HOTEL] FOREIGN KEY ([Hotelid]) REFERENCES [dbo].[Hotels] ([ID]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[Hotels_Info_Pictures]...';


GO
ALTER TABLE [dbo].[Pictures] WITH NOCHECK
    ADD CONSTRAINT [Hotels_Info_Pictures] FOREIGN KEY ([Hotelid]) REFERENCES [dbo].[Hotels] ([ID]) ON DELETE CASCADE;


GO
PRINT N'Altering [dbo].[DeleteHotel]...';


GO
ALTER PROCEDURE [dbo].[DeleteHotel]
	@HotelName varchar(50),
	@CityName varchar(50)
AS
	
	DELETE from Hotels
	WHERE ID = (SELECT ID
				FROM Hotels as h
				WHERE h.[Name] = @HotelName AND h.[City] = @CityName)
GO
PRINT N'Altering [dbo].[InsertFromWindow]...';


GO
ALTER PROCEDURE [dbo].[InsertFromWindow]
	@HotelName varchar(50),
	@CityName varchar(50),
	@RoomNumber smallint,
	@BedQuantity tinyint,
	@Money money
	
AS
	BEGIN TRANSACTION;
--ete masnachyux chka,@HotID -n klini 0, piti insert anenq
	DECLARE @HotID int

	Set @HotID = isnull((SELECT h.ID FROM Hotels h WHERE h.City = @CityName AND h.[Name] = @HotelName),0)


	IF @HotID = 0
	BEGIN
		INSERT INTO Hotels([Name], [City])
			VALUES (@HotelName, @CityName);

	SET @HotID = SCOPE_IDENTITY()
	END
--hima piti stugenq tenc hamari senyakn ka mer hotel-um te voch
--bayc ete stugum enq u tesnum enq vor ka, RAISERROR enq anum

--	RAISERROR ( 'Whoops, Such Hotel Room already Exsists',1,1)

		
       IF EXISTS  (select RoomNumber
				    from HotelsRoomsInfo
				    where HotelId = @HotID AND RoomNumber = @RoomNumber)
		BEGIN
		RAISERROR ( 'Whoops, Such Hotel Room already Exsists',18,1)
		END
		ELSE
		BEGIN
		INSERT INTO HotelsRoomsInfo([HotelId],[BedQuantity],[RoomNumber],[Money])
				Values (@HotID, @BedQuantity, @RoomNumber, @Money);
		END
	COMMIT TRANSACTION;
GO
PRINT N'Altering [dbo].[SearchST]...';


GO
ALTER PROCEDURE [dbo].[SearchST]
	@HotelName varchar(50),
	@CityName varchar(50),
	@From datetime,
	@To datetime = null,
	@BedQuantity tinyint
AS

	SET @BedQuantity = nullif(@BedQuantity ,0)

	IF LEN(@CityName) = 0
	BEGIN
	SET @CityName = null
	END

	IF LEN(@HotelName)= 0
	BEGIN
	SET @HotelName = null
	END
	
	

	select t1.[Name] as HotelName, t1.City as CityName , t2.BedQuantity as Bed, t2.RoomNumber, t2.[Money]
	from Hotels as t1
	join HotelsRoomsInfo as t2
	ON t1.ID = t2.HotelId
	where t2.ID IN (
						select h3.ID
						from Hotels as h4
						join HotelsRoomsInfo as h3
						on h4.ID = h3.HotelId
						where h4.[Name] = isnull(@HotelName,h4.[Name]) and h4.City = isnull(@CityName,h4.City)
											and h3.BedQuantity = isnull(@BedQuantity,h3.BedQuantity)
						EXCEPT
						(
						select h2.ID as reservedRoomsIds
						from Hotels as h1
						join HotelsRoomsInfo as h2
						on h1.ID = h2.HotelId
						join booked as b
						on b.HotelidRoom = h2.ID
						where (@To IS NOT NULL AND h1.[Name] = isnull(@HotelName,h1.[Name]) and h1.City = isnull(@CityName,h1.City) and
								h2.BedQuantity = isnull(@BedQuantity,h2.BedQuantity) and 
								(
											(@From <= b.[From] and  @To > b.[From])
											OR (@From >= b.[From] and @From < b.[To])
								)
							)
							OR
							( @To IS NULL AND
							h1.[Name] = isnull(@HotelName,h1.[Name]) and h1.City = isnull(@CityName,h1.City) and
											h2.BedQuantity = isnull(@BedQuantity,h2.BedQuantity) and 
											(
														(@From <= b.[From])
														OR (@From >= b.[From] and @From < b.[To])
											)
								)
						group by h2.ID
						)
					)
		--group by t1.[Name], t1.City, t2.BedQuantity, t2.[Money]									
GO
PRINT N'Creating [dbo].[Book]...';


GO
CREATE PROCEDURE [dbo].[Book]
	@passportId varchar(10),
	@name nvarchar(20),
	@surname nvarchar(20),
	@gender nchar(1),
	@email nvarchar(30),
	@city nvarchar(20),
	@country nvarchar(30),
	@creditCardNumber nvarchar(15),
	@from datetime,
	@to datetime,
	@HotelName varchar(50),
	@CityName varchar(50),
	@BedQuantity tinyint,
	@Money money
AS
	
	--we want to find any HotelRoomsINfo id for inserting in booked table

	DECLARE @HotelBookID int

	SET @HotelBookID = (select top 1
						h2.ID
						from Hotels as h1
						join HotelsRoomsInfo as h2
						on h1.ID = h2.HotelId
						where h1.City = @CityName and h1.[Name] = @HotelName and h2.[Money] = @Money and h2.BedQuantity = @BedQuantity)


	INSERT INTO PersonsInfo([Name],[Surname],[Passportid],[Gender],[Email],[City],[Country],[CreditCardNumber])
	VALUES (@name, @surname, @passportId, @gender, @email, @city, @country,@creditCardNumber)


	INSERT INTO booked([From],[To],[HotelidRoom],[Passportid])
	VALUES (@from, @to, @HotelBookID, @passportId)



RETURN 0
GO
PRINT N'Creating [dbo].[FreeRoomsCertainHotel]...';


GO
CREATE PROCEDURE [dbo].[FreeRoomsCertainHotel]
	@HotelName varchar(50),
	@CityName varchar(50),
	@From datetime,
	@To datetime = null,
	@BedQuantity tinyint
AS
	
	declare @t table(HotelName nchar(20), City nchar(20), Bed tinyint, Room smallint, [Money] money)
	insert @t
	exec SearchST @HotelName, @CityName, @From, null, null

	select Bed,[Money]
	from @t
	group by Bed,[Money]
GO
PRINT N'Creating [dbo].[getRoomInfoPicture]...';


GO
CREATE PROCEDURE [dbo].[getRoomInfoPicture]
	@id int
AS
	select res1.[Name] as HotelName,res2.[Source] as Nkar,res3.Long as Long 
	from Hotels as res1
	join Pictures as res2
	on res1.ID = res2.Hotelid
	join Descriptionn as res3
	on res1.ID = res3.Hotelid
	where res1.ID = @id


RETURN 0
GO
PRINT N'Creating [dbo].[InsertDescription]...';


GO
CREATE PROCEDURE [dbo].[InsertDescription]
	@HotelName varchar(50),
	@CityName varchar(50),
	@ShortDescription nvarchar(600),
	@LongDescription nvarchar(1500)
AS

	DECLARE @HoteliD int
	DECLARE @CountInDesc int
	Set @HoteliD = (SELECT ID FROM Hotels Where [Name] = @HotelName AND [City] = @CityName)
	SET @CountInDesc = isnull((SELECT COUNT(*) FROM Descriptionn WHERE Hotelid = @HoteliD),0)

	IF @CountInDesc = 1
	BEGIN
		RAISERROR ( 'Whoops, Such Hotel Description already Exsists',18,1)		
	END
	ELSE
	BEGIN
		INSERT INTO Descriptionn([Short],[Long],[Hotelid])
			VALUES (@ShortDescription, @LongDescription, @HoteliD);
	END
GO
PRINT N'Creating [dbo].[InsertPicture]...';


GO
CREATE PROCEDURE [dbo].[InsertPicture]
	@HotelName varchar(50),
	@CityName varchar(50),
	@PicUrl nvarchar(150)
AS

	DECLARE @HoteliD int

	SET @HoteliD = (SELECT ID
					FROM Hotels
					Where [Name] = @HotelName AND [City] = @CityName)

	INSERT INTO Pictures([Hotelid],[Source])
		VALUES (@HoteliD, @PicUrl);
GO
PRINT N'Creating [dbo].[SearchResultForWeb]...';


GO
CREATE PROCEDURE [dbo].[SearchResultForWeb]
	@HotelName varchar(50),
	@CityName varchar(50),
	@From datetime,
	@To datetime = null,
	@BedQuantity tinyint
AS

	SET @BedQuantity = nullif(@BedQuantity ,0)

	IF LEN(@CityName) = 0
	BEGIN
	SET @CityName = null
	END

	IF LEN(@HotelName)= 0
	BEGIN
	SET @HotelName = null
	END
	


	SELECT *
	FROM   (
			SELECT  res1.ID, res1.[Name], res1.City, res2.[Source], res3.Short, res3.Long,
							ROW_NUMBER() OVER(PARTITION BY res1.ID ORDER BY res1.ID) as toPrint
			FROM Hotels as res1
			JOIN Pictures as res2
			ON res1.ID = res2.Hotelid
			JOIN Descriptionn as res3
			ON res1.ID = res3.Hotelid
			WHERE res1.ID IN
				(	
					select DISTINCT t1.ID
					from Hotels as t1
					join HotelsRoomsInfo as t2
					ON t1.ID = t2.HotelId
					where t2.ID IN (
										select h3.ID
										from Hotels as h4
										join HotelsRoomsInfo as h3
										on h4.ID = h3.HotelId
										where h4.[Name] = isnull(@HotelName,h4.[Name]) and h4.City = isnull(@CityName,h4.City)
															and h3.BedQuantity = isnull(@BedQuantity,h3.BedQuantity)
										EXCEPT
										(
										select h2.ID as reservedRoomsIds
										from Hotels as h1
										join HotelsRoomsInfo as h2
										on h1.ID = h2.HotelId
										join booked as b
										on b.HotelidRoom = h2.ID
										where (@To IS NOT NULL AND h1.[Name] = isnull(@HotelName,h1.[Name]) and h1.City = isnull(@CityName,h1.City) and
												h2.BedQuantity = isnull(@BedQuantity,h2.BedQuantity) and 
												(
															(@From <= b.[From] and  @To > b.[From])
															OR (@From >= b.[From] and @From < b.[To])
												)
											)
											OR
											( @To IS NULL AND
											h1.[Name] = isnull(@HotelName,h1.[Name]) and h1.City = isnull(@CityName,h1.City) and
															h2.BedQuantity = isnull(@BedQuantity,h2.BedQuantity) and 
															(
																		(@From <= b.[From])
																		OR (@From >= b.[From] and @From < b.[To])
															)
												)
							
										group by h2.ID
										)
									)
				)

			)as kkk
	where kkk.toPrint = 1
GO
PRINT N'Refreshing [dbo].[ReservedRoom]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ReservedRoom]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/



EXEC InsertFromWindow 'Marriot','Yerevan' ,1, 1, 17000
EXEC InsertFromWindow 'Marriot','Yerevan' ,2, 1, 17000
EXEC InsertFromWindow 'Marriot','Yerevan' ,3, 1, 110000


EXEC InsertFromWindow 'Grand Hotel','Yerevan' ,1, 1, 17000
EXEC InsertFromWindow 'Grand Hotel','Yerevan' ,2, 3, 47000
EXEC InsertFromWindow 'Grand Hotel','Yerevan' ,3, 3, 490000
EXEC InsertFromWindow 'Grand Hotel','Yerevan' ,4, 3, 49000
EXEC InsertFromWindow 'Grand Hotel','Yerevan' ,5, 2, 47000



EXEC InsertFromWindow 'Marriot','Yerevan' ,4, 3, 37000
EXEC InsertFromWindow 'Marriot','Yerevan' ,5, 2, 28000
EXEC InsertFromWindow 'Marriot','Yerevan' ,6, 2, 28000
EXEC InsertFromWindow 'Marriot','Yerevan' ,7, 2, 5400000
EXEC InsertFromWindow 'Marriot','Yerevan' ,8, 2, 540000
EXEC InsertFromWindow 'Marriot','Yerevan' ,9, 2, 28000



EXEC InsertFromWindow 'Grand Hotel','Malibu' ,1, 1, 17000
EXEC InsertFromWindow 'Grand Hotel','Malibu' ,2, 3, 47000
EXEC InsertFromWindow 'Grand Hotel','Sochi' ,3, 3, 490000
EXEC InsertFromWindow 'Grand Hotel','Sochi' ,4, 3, 49000
EXEC InsertFromWindow 'Grand Hotel','Sochi' ,5, 2, 47000

INSERT INTO PersonsInfo
VALUES 
('1111', 'aaa','sss','F','asas','assa','sacasc','hhh'),
('2222', 'aaa','sss','F','asas','assa','sacasc','jjl'),
('3333', 'aaa','sss','F','asas','assa','sacasc','jbj'),
('4444', 'aaa','sss','F','asas','assa','sacasc','hjbhj')


INSERT INTO booked
VALUES ('2020-03-06', '2020-03-15', 1, '1111'),
		('2020-03-02', '2020-03-14', 2, '2222'),
		('2020-03-07', '2020-03-09', 3, '3333'),
		('2020-03-06', '2020-03-15', 6, '4444')

		
INSERT INTO Pictures
VALUES ('nkarMarriot1111', 1),
		('nkarMarriot2222', 1),
		('nkarMarriot3333', 1),
		('nkarMarriot4444', 1),
		('nkarGrandHotel1111', 3),
		('nkarGrandHotel2222', 3),
		('nkarGrandHotel3333', 3)



INSERT INTO Descriptionn
VALUES ('shorttttttt', 'longggggggggggg',1),
		('grand hotel short text', 'grand hotel long text', 3)

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Descriptionn] WITH CHECK CHECK CONSTRAINT [Ref_DESCRIPTION_HOTEL];

ALTER TABLE [dbo].[Pictures] WITH CHECK CHECK CONSTRAINT [Hotels_Info_Pictures];


GO
PRINT N'Update complete.';


GO
